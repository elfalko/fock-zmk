/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
/* #include <dt-bindings/zmk/bt.h> */

/* #include <dt-bindings/zmk/ext_power.h> */
#define DEF 0
#define SPC 1
#define NUM 2

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1   |  2   |  3    |  4   |  5  |    |  6  |  7   |  8    |  9   |   0   |   `   |
// |  TAB  |  Q   |  W   |  E    |  R   |  T  |    |  Y  |  U   |  I    |  O   |   P   |   -   |
// |  CAPS |LGUI A|LALT S|LSHFT D|LCTL F|  G  |    |  H  |RCTL J|RSHFT K|RALT L|RGUI ; |   '   |
// | SHIFT |  Z   |  X   |  C    |  V   |  B  |    |  N  |  M   |  ,    |  .   |   /   | SHIFT |
//                | ALT  | TAB   | ESC  |L1 BSP|    | SPC | ENT  | L2    | GUI  |
		bindings = <
&kp ESC   &kp N1      &kp N2      &kp N3       &kp N4       &kp N5             &kp N6     &kp N7         &kp N8         &kp N9       &kp N0        &kp GRAVE
&kp TAB   &kp Q       &kp W       &kp E        &kp R        &kp T              &kp Y      &kp U          &kp I          &kp O        &kp P         &kp MINUS
&kp CAPS  &mt LGUI A  &mt LALT S  &mt LSHFT D  &mt LCTRL F  &kp G              &kp H      &mt RCTRL J    &mt RSHFT K    &mt RALT L   &mt RGUI SEMI &kp SQT
&kp LSHFT &kp Z       &kp X       &kp C        &kp V        &kp B              &kp N      &kp M          &kp COMMA      &kp DOT      &kp FSLH      &kp RSHFT
                      &kp LALT    &kp TAB      &lt SPC ESC  &kp BSPC           &kp SPACE  &lt NUM RET    &kp DEL        &kp RGUI
			>;
		};

		special_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |     |     |       |      |     |    |     |      |       |     |     |     |
// |     |  !  |  @  |  {    |  }   |  %  |    |  ^  |  &   |  *    |  #  |  $  |     |
// |     |     |  ~  |LSHFT (|LCTL )|     |    |     |RCTL =|RSHFT +|  -  |  _  |     |
// |     |     |  `  |  [    |  ]   |     |    |     |  /   |  |    |  \  |  ?  |     |
//             |     |       |      |     |    |     |      |       |     |
// maybe degree ring
			bindings = <
&trans    &trans      &trans      &trans          &trans          &trans             &trans     &trans             &trans            &trans       &trans       &trans
&trans    &kp EXCL    &kp AT      &kp LBRC        &kp RBRC        &kp PERCENT        &kp CARET  &kp AMPS           &kp STAR          &kp HASH     &kp DOLLAR   &trans
&trans    &trans      &kp TILDE   &mt LSHFT LPAR  &mt LCTRL RPAR  &trans             &trans     &mt RCTRL EQUAL    &mt RSHFT PLUS    &kp MINUS    &kp SEMI     &trans
&trans    &trans      &kp GRAVE   &kp LBKT        &kp RBKT        &trans             &trans     &kp FSLH           &kp PIPE          &kp BSLH     &kp QMARK    &trans
                      &trans      &trans          &trans          &trans             &trans     &trans             &trans            &trans			>;
		};

		num_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |     |     |     |     |     |    |     |     |     |     |     |     |
// | F1  | F2  | F3  | F4  | F5  | F6  |    | F7  | F8  | F9  | F10 | F11 | F12 |
// |     |  1  |  2  |  3  |  4  |  5  |    |  6  |  7  |  8  |  9  |  0  |     |
// |     |     |     |     |     |     |    |     |     |     |     |     |     |
//             |     |     |     |     |    |     |     |     |     |
			bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans			>;
		};
	};
};
